version: '3.1'
services:
  the_monkeys_db:
    container_name: "the-monkeys-psql"
    image: bitnami/postgresql:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: Secret
      POSTGRES_USER: root
      POSTGRES_DB: the_monkeys_user_dev
    ports:
      - 1234:5432
    networks:
      - monkeys-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-migrations:
    container_name: "the-monkeys-psql-migrate"
    image: migrate/migrate:v4.15.2
    volumes:
      - ./schema:/migrations
    networks:
      - monkeys-network
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://root:Secret@the_monkeys_db:5432/the_monkeys_user_dev?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      the_monkeys_db:
        condition: service_healthy
    restart: on-failure

  the_monkeys_gateway:
    container_name: "the-monkeys-gateway"
    image: golang:latest
    networks:
      - monkeys-network
    depends_on:
      - the_monkeys_db
      - db-migrations
    volumes:
      - .:/go/src/app
    ports:
      - "8081:8081"
    working_dir: /go/src/app
    command: go run microservices/the_monkeys_gateway/main.go

  the_monkeys_authz:
    container_name: "the-monkeys-auth"
    image: golang:latest
    networks:
      - monkeys-network
    depends_on:
      - the_monkeys_db
      - db-migrations
    volumes:
      - .:/go/src/app
    ports:
      - "50051:50051"
    working_dir: /go/src/app
    command: go run microservices/the_monkeys_authz/main.go

  the_monkeys_file_server:
    container_name: "the-monkeys-file-server"
    image: golang:latest
    networks:
      - monkeys-network
    depends_on:
      - the_monkeys_db
      - db-migrations
    volumes:
      - .:/go/src/app
      - the_monkeys_profile:/profile
      - blogs_volume:/blogs
    ports:
      - "50054:50054"
    working_dir: /go/src/app
    command: go run microservices/the_monkeys_file_storage/main.go

  # the_monkeys_gateway:
  #   container_name: "monkeys-engine"
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - monkeys-network
  #   depends_on:
  #     - the_monkeys_db
  #     - db-migrations

  # opensearch-node1:
  #   image: opensearchproject/opensearch:1.2.1
  #   container_name: monkeys-os
  #   environment:
  #     - cluster.name=opensearch-cluster
  #     - node.name=opensearch-node1
  #     - discovery.seed_hosts=opensearch-node1
  #     - cluster.initial_master_nodes=opensearch-node1
  #     - bootstrap.memory_lock=true # along with the memlock settings below, disables swapping
  #     - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
  #     - plugins.security.disabled=true
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #    - /usr/share/opensearch/data
  #   ports:
  #     - 9200:9200
  #     - 9600:9600 # required for Performance Analyzer
  #   networks:
  #     - monkeys-network

  # the-monkeys-rabbitmq:
  #   image: rabbitmq:latest
  #   container_name: monkeys-rabbitmq
  #   restart: always
  #   ports:
  #     - "5672:5672"  # RabbitMQ default port
  #     - "15672:15672"  # RabbitMQ Management UI port
  #   networks:
  #     - monkeys-network    
  #   volumes:
  #     - /var/lib/rabbitmq


networks:
  monkeys-network:
    driver: bridge

volumes:
  postgres_data:
  the_monkeys_profile:
  blogs_volume:
  

