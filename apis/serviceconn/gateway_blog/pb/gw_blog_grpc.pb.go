// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.15.8
// source: apis/serviceconn/gateway_blog/pb/gw_blog.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BlogServiceClient is the client API for BlogService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BlogServiceClient interface {
	DraftBlog(ctx context.Context, in *DraftBlogRequest, opts ...grpc.CallOption) (*BlogResponse, error)
	PublishBlog(ctx context.Context, in *PublishBlogReq, opts ...grpc.CallOption) (*PublishBlogResp, error)
	GetPublishedBlogById(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetBlogByIdRes, error)
	GetDraftBlogById(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetBlogByIdRes, error)
	ArchiveBlogById(ctx context.Context, in *ArchiveBlogReq, opts ...grpc.CallOption) (*ArchiveBlogResp, error)
	GetPublishedBlogsByTagsName(ctx context.Context, in *GetBlogsByTagsNameReq, opts ...grpc.CallOption) (*GetBlogsByTagsNameRes, error)
	GetDraftBlogsByAccId(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetDraftBlogsRes, error)
	GetPublishedBlogsByAccID(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetPublishedBlogsRes, error)
	GetLatest100Blogs(ctx context.Context, in *GetBlogsByTagsNameReq, opts ...grpc.CallOption) (*GetBlogsByTagsNameRes, error)
	GetPublishedBlogByIdAndOwnerId(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetBlogByIdRes, error)
}

type blogServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBlogServiceClient(cc grpc.ClientConnInterface) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) DraftBlog(ctx context.Context, in *DraftBlogRequest, opts ...grpc.CallOption) (*BlogResponse, error) {
	out := new(BlogResponse)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/DraftBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) PublishBlog(ctx context.Context, in *PublishBlogReq, opts ...grpc.CallOption) (*PublishBlogResp, error) {
	out := new(PublishBlogResp)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/PublishBlog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetPublishedBlogById(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetBlogByIdRes, error) {
	out := new(GetBlogByIdRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetPublishedBlogById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetDraftBlogById(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetBlogByIdRes, error) {
	out := new(GetBlogByIdRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetDraftBlogById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ArchiveBlogById(ctx context.Context, in *ArchiveBlogReq, opts ...grpc.CallOption) (*ArchiveBlogResp, error) {
	out := new(ArchiveBlogResp)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/ArchiveBlogById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetPublishedBlogsByTagsName(ctx context.Context, in *GetBlogsByTagsNameReq, opts ...grpc.CallOption) (*GetBlogsByTagsNameRes, error) {
	out := new(GetBlogsByTagsNameRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetPublishedBlogsByTagsName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetDraftBlogsByAccId(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetDraftBlogsRes, error) {
	out := new(GetDraftBlogsRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetDraftBlogsByAccId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetPublishedBlogsByAccID(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetPublishedBlogsRes, error) {
	out := new(GetPublishedBlogsRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetPublishedBlogsByAccID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetLatest100Blogs(ctx context.Context, in *GetBlogsByTagsNameReq, opts ...grpc.CallOption) (*GetBlogsByTagsNameRes, error) {
	out := new(GetBlogsByTagsNameRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetLatest100Blogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) GetPublishedBlogByIdAndOwnerId(ctx context.Context, in *GetBlogByIdReq, opts ...grpc.CallOption) (*GetBlogByIdRes, error) {
	out := new(GetBlogByIdRes)
	err := c.cc.Invoke(ctx, "/blog_svc.BlogService/GetPublishedBlogByIdAndOwnerId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlogServiceServer is the server API for BlogService service.
// All implementations must embed UnimplementedBlogServiceServer
// for forward compatibility
type BlogServiceServer interface {
	DraftBlog(context.Context, *DraftBlogRequest) (*BlogResponse, error)
	PublishBlog(context.Context, *PublishBlogReq) (*PublishBlogResp, error)
	GetPublishedBlogById(context.Context, *GetBlogByIdReq) (*GetBlogByIdRes, error)
	GetDraftBlogById(context.Context, *GetBlogByIdReq) (*GetBlogByIdRes, error)
	ArchiveBlogById(context.Context, *ArchiveBlogReq) (*ArchiveBlogResp, error)
	GetPublishedBlogsByTagsName(context.Context, *GetBlogsByTagsNameReq) (*GetBlogsByTagsNameRes, error)
	GetDraftBlogsByAccId(context.Context, *GetBlogByIdReq) (*GetDraftBlogsRes, error)
	GetPublishedBlogsByAccID(context.Context, *GetBlogByIdReq) (*GetPublishedBlogsRes, error)
	GetLatest100Blogs(context.Context, *GetBlogsByTagsNameReq) (*GetBlogsByTagsNameRes, error)
	GetPublishedBlogByIdAndOwnerId(context.Context, *GetBlogByIdReq) (*GetBlogByIdRes, error)
	mustEmbedUnimplementedBlogServiceServer()
}

// UnimplementedBlogServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBlogServiceServer struct {
}

func (UnimplementedBlogServiceServer) DraftBlog(context.Context, *DraftBlogRequest) (*BlogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DraftBlog not implemented")
}
func (UnimplementedBlogServiceServer) PublishBlog(context.Context, *PublishBlogReq) (*PublishBlogResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishBlog not implemented")
}
func (UnimplementedBlogServiceServer) GetPublishedBlogById(context.Context, *GetBlogByIdReq) (*GetBlogByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublishedBlogById not implemented")
}
func (UnimplementedBlogServiceServer) GetDraftBlogById(context.Context, *GetBlogByIdReq) (*GetBlogByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDraftBlogById not implemented")
}
func (UnimplementedBlogServiceServer) ArchiveBlogById(context.Context, *ArchiveBlogReq) (*ArchiveBlogResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ArchiveBlogById not implemented")
}
func (UnimplementedBlogServiceServer) GetPublishedBlogsByTagsName(context.Context, *GetBlogsByTagsNameReq) (*GetBlogsByTagsNameRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublishedBlogsByTagsName not implemented")
}
func (UnimplementedBlogServiceServer) GetDraftBlogsByAccId(context.Context, *GetBlogByIdReq) (*GetDraftBlogsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDraftBlogsByAccId not implemented")
}
func (UnimplementedBlogServiceServer) GetPublishedBlogsByAccID(context.Context, *GetBlogByIdReq) (*GetPublishedBlogsRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublishedBlogsByAccID not implemented")
}
func (UnimplementedBlogServiceServer) GetLatest100Blogs(context.Context, *GetBlogsByTagsNameReq) (*GetBlogsByTagsNameRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLatest100Blogs not implemented")
}
func (UnimplementedBlogServiceServer) GetPublishedBlogByIdAndOwnerId(context.Context, *GetBlogByIdReq) (*GetBlogByIdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPublishedBlogByIdAndOwnerId not implemented")
}
func (UnimplementedBlogServiceServer) mustEmbedUnimplementedBlogServiceServer() {}

// UnsafeBlogServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BlogServiceServer will
// result in compilation errors.
type UnsafeBlogServiceServer interface {
	mustEmbedUnimplementedBlogServiceServer()
}

func RegisterBlogServiceServer(s grpc.ServiceRegistrar, srv BlogServiceServer) {
	s.RegisterService(&BlogService_ServiceDesc, srv)
}

func _BlogService_DraftBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DraftBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).DraftBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/DraftBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).DraftBlog(ctx, req.(*DraftBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_PublishBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishBlogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).PublishBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/PublishBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).PublishBlog(ctx, req.(*PublishBlogReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetPublishedBlogById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetPublishedBlogById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetPublishedBlogById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetPublishedBlogById(ctx, req.(*GetBlogByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetDraftBlogById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetDraftBlogById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetDraftBlogById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetDraftBlogById(ctx, req.(*GetBlogByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ArchiveBlogById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveBlogReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ArchiveBlogById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/ArchiveBlogById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ArchiveBlogById(ctx, req.(*ArchiveBlogReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetPublishedBlogsByTagsName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogsByTagsNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetPublishedBlogsByTagsName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetPublishedBlogsByTagsName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetPublishedBlogsByTagsName(ctx, req.(*GetBlogsByTagsNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetDraftBlogsByAccId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetDraftBlogsByAccId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetDraftBlogsByAccId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetDraftBlogsByAccId(ctx, req.(*GetBlogByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetPublishedBlogsByAccID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetPublishedBlogsByAccID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetPublishedBlogsByAccID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetPublishedBlogsByAccID(ctx, req.(*GetBlogByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetLatest100Blogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogsByTagsNameReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetLatest100Blogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetLatest100Blogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetLatest100Blogs(ctx, req.(*GetBlogsByTagsNameReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_GetPublishedBlogByIdAndOwnerId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlogByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).GetPublishedBlogByIdAndOwnerId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog_svc.BlogService/GetPublishedBlogByIdAndOwnerId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).GetPublishedBlogByIdAndOwnerId(ctx, req.(*GetBlogByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

// BlogService_ServiceDesc is the grpc.ServiceDesc for BlogService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BlogService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "blog_svc.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DraftBlog",
			Handler:    _BlogService_DraftBlog_Handler,
		},
		{
			MethodName: "PublishBlog",
			Handler:    _BlogService_PublishBlog_Handler,
		},
		{
			MethodName: "GetPublishedBlogById",
			Handler:    _BlogService_GetPublishedBlogById_Handler,
		},
		{
			MethodName: "GetDraftBlogById",
			Handler:    _BlogService_GetDraftBlogById_Handler,
		},
		{
			MethodName: "ArchiveBlogById",
			Handler:    _BlogService_ArchiveBlogById_Handler,
		},
		{
			MethodName: "GetPublishedBlogsByTagsName",
			Handler:    _BlogService_GetPublishedBlogsByTagsName_Handler,
		},
		{
			MethodName: "GetDraftBlogsByAccId",
			Handler:    _BlogService_GetDraftBlogsByAccId_Handler,
		},
		{
			MethodName: "GetPublishedBlogsByAccID",
			Handler:    _BlogService_GetPublishedBlogsByAccID_Handler,
		},
		{
			MethodName: "GetLatest100Blogs",
			Handler:    _BlogService_GetLatest100Blogs_Handler,
		},
		{
			MethodName: "GetPublishedBlogByIdAndOwnerId",
			Handler:    _BlogService_GetPublishedBlogByIdAndOwnerId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apis/serviceconn/gateway_blog/pb/gw_blog.proto",
}
