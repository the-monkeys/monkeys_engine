syntax = "proto3";

package auth_svc;

option go_package = "./apis/serviceconn/gateway_authz/pb";

// Global enums for activity tracking
enum Platform {
  PLATFORM_UNSPECIFIED = 0;
  PLATFORM_WEB = 1;
  PLATFORM_MOBILE = 2;
  PLATFORM_TABLET = 3;
  PLATFORM_API = 4;
  PLATFORM_DESKTOP = 5;
}

// Reusable client information for all requests
message ClientInfo {
  // Basic client information
  string ip_address = 1;
  string client = 2;
  string session_id = 3;
  string user_agent = 4;
  string referrer = 5;
  Platform platform = 6;

  // Enhanced Browser fingerprinting
  string accept_language = 7;
  string accept_encoding = 8;
  string dnt = 9;
  string timezone = 10;
  string screen_resolution = 11;
  string color_depth = 12;
  string device_memory = 13;
  repeated string languages = 14;

  // Location & Geographic hints
  string country = 15;
  string timezone_offset = 16;

  // Marketing & UTM tracking
  string utm_source = 17;
  string utm_medium = 18;
  string utm_campaign = 19;
  string utm_content = 20;
  string utm_term = 21;

  // Behavioral indicators
  bool is_bot = 22;
  double trust_score = 23;
  int32 request_count = 24;

  // Technical environment
  bool is_secure_context = 25;
  string connection_type = 26;
  string browser_engine = 27;
  bool javascript_enabled = 28;

  // Timestamps
  string first_seen = 29;
  string last_seen = 30;
  string collected_at = 31;
}

message RegisterUserRequest {
  string first_name = 1;
  string last_name = 2;
  string email = 3;
  string password = 4;
  LoginMethod login_method = 5;
  ClientInfo client_info = 6;

  enum LoginMethod {
    The_MONKEYS = 0;
    GOOGLE_ACC = 1;
    ANDROID = 2;
    IPHONE = 3;
  }
}

message RegisterUserResponse {
  int64 status_code = 1;
  string token = 2;
  bool email_verified = 3;
  int64 user_id = 4;
  string username = 5;
  string first_name = 6;
  string last_name = 7;
  string email = 8;
  string email_verification_status = 9;
  Error error = 10;
  string account_id = 11;
}

message Error {
  int32 status = 1;
  string error = 2;
  string message = 3;
}

message ValidateRequest { 
  string token = 1;
  string email = 2;
  int64 user_id = 3;
  string user_name = 4;
}

message ValidateResponse {
  int64 status_code = 1;
  string email = 2;
  int64 user_id = 3;
  string user_name = 4;
  Error error = 5;
  string account_id = 6;
}

message DecodeSignedJWTRequest {
  string token = 1;
}

message DecodeSignedJWTResponse {
  int64 status_code = 1;
  int64 user_id = 2;
  string username = 3;
  string first_name = 4;
  string last_name = 5;
  string email = 6;
  string email_verification_status = 7;
  Error error = 8;
  string account_id = 9;
}

message AccessCheckReq { 
  string token = 1;
  string email = 2;
  string account_id = 3;
  string user_name = 4;
  string blog_id = 5;
  string file_name = 6;
}

message AccessCheckRes {
  int64 status_code = 1;
  string email = 2;
  string account_id = 3;
  string user_name = 4;
  repeated string access = 5;
  string blog_id = 6;
  Error error = 7;
  string role = 8;
}

message LoginUserRequest {
  string email = 1;
  string password = 2;
  ClientInfo client_info = 3;
}

message LoginUserResponse {
  int64 status_code = 1;
  string token = 2;
  bool email_verified = 3;
  int64 user_id = 4;
  string username = 5;
  string first_name = 6;
  string last_name = 7;
  string email = 8;
  string email_verification_status = 9;
  Error error = 10;
  string account_id = 11;
}

message ForgotPasswordReq {
  string email = 1;
  ClientInfo client_info = 2;
}

message ForgotPasswordRes {
  int64 status_code = 1;
  string message = 2;
  Error error = 3;
}

message ResetPasswordReq {
  int64 id = 1;
  string token = 2;
  string email = 3;
  string username = 4;
  ClientInfo client_info = 5;
}

message ResetPasswordRes {
  int64 status_code = 1;
  string token = 2;
  bool email_verified = 3;
  int64 user_id = 4;
  string user_name = 5;
  string first_name = 6;
  string last_name = 7;
  string email = 8;
  bool email_verification_status = 9;
  Error error = 10;
}

message UpdatePasswordReq {
  string password = 1;
  string username = 2;
  string email = 3;
  ClientInfo client_info = 4;
}

message UpdatePasswordRes {
  int64 status_code = 1;
  Error error = 2;
}

message EmailVerificationReq {
  string email = 1;
  ClientInfo client_info = 2;
}

message EmailVerificationRes {
  int64 status_code = 1;
  Error error = 2;
}

message VerifyEmailReq {
  string email = 1;
  string username = 2;
  string token = 3;
  ClientInfo client_info = 4;
}

message VerifyEmailRes {
  int64 status_code = 1;
  Error error = 2;
  string token = 3;
}

message UpdateUsernameReq {
  string current_username = 1;
  string new_username = 2;
  ClientInfo client_info = 3;
}

message UpdateUsernameRes {
  int64 status_code = 1;
  string token = 2;
  bool email_verified = 3;
  int64 user_id = 4;
  string user_name = 5;
  string first_name = 6;
  string last_name = 7;
  string email = 8;
  bool email_verification_status = 9;
  Error error = 10;
  string account_id = 11;
}

message UpdatePasswordWithPasswordReq {
  string current_password = 1;
  string username = 2;
  string new_password = 3;
  ClientInfo client_info = 4;
}

message UpdatePasswordWithPasswordRes {
  int64 status_code = 1;
  Error error = 2;
}

message UpdateEmailIdReq {
  string new_email = 1;
  string username = 2;
  ClientInfo client_info = 3;
}

message UpdateEmailIdRes {
  int64 status_code = 1;
  string token = 2;
  bool email_verified = 3;
  int64 user_id = 4;
  string user_name = 5;
  string first_name = 6;
  string last_name = 7;
  string email = 8;
  bool email_verification_status = 9;
  Error error = 10;
  string account_id = 11;
}

service AuthService {
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  rpc CheckAccessLevel(AccessCheckReq) returns (AccessCheckRes) {}
  rpc Login(LoginUserRequest) returns (LoginUserResponse) {}
  rpc ForgotPassword(ForgotPasswordReq) returns (ForgotPasswordRes) {}
  rpc ResetPassword(ResetPasswordReq) returns (ResetPasswordRes) {}
  rpc UpdatePassword(UpdatePasswordReq) returns (UpdatePasswordRes) {}
  rpc RequestForEmailVerification(EmailVerificationReq) returns (EmailVerificationRes) {}
  rpc VerifyEmail(VerifyEmailReq) returns (VerifyEmailRes) {}
  rpc UpdateUsername(UpdateUsernameReq) returns (UpdateUsernameRes) {}
  rpc UpdatePasswordWithPassword(UpdatePasswordWithPasswordReq) returns (UpdatePasswordWithPasswordRes) {}
  rpc UpdateEmailId(UpdateEmailIdReq) returns (UpdateEmailIdRes) {}
  rpc GoogleLogin(RegisterUserRequest) returns (RegisterUserResponse) {}
  rpc DecodeSignedJWT(DecodeSignedJWTRequest) returns (DecodeSignedJWTResponse) {}
}
