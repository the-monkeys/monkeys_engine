swagger: '2.0'
info:
  title: The Monkeys
  version: 0.0.1
tags:
  - name: Authentication
consumes:
  - application/json
produces:
  - application/json
paths:
  /user/:username:
    get:
      operationId: UserService.getProfile
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              account_id:
                type: string
                example: nnJ2zlT0RDJB
              username:
                type: string
                example: example
              first_name:
                type: string
                example: example
              last_name:
                type: string
                example: "2006-01-02 00:00:00 +0000 +0000"
              bio:
                type: string
                example: "Student of Science, learning, un-learning, relearning"
              date_of_birth:
                type: string
                example: "https://example.com/avatar/profile.jpg"
              created_at:
                type: string
                example: example
              updated_at:
                type: string
                example: +9876543210
              user_status:
                type: string
                example: active
              instagram:
                type: string
                example: example
              linkedin:
                type: string
                example: example
              twitter:
                type: string
                example: example
              github:
                type: string
                example: example
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: Bearer token for authorization
        - in: header
          name: ip
          type: string
          required: true
          description: Ip address of the user
        - in: header
          name: client
          type: string
          required: true
          description: Ip address of the user
      tags:
        - User
        
    put:
      operationId: UserService.UpdateProfile
      responses:
        '202':
          description: A successful response.
          schema:
            type: object
            properties:
              username:
                type: string
                example: nnJ2zlT0RDJB
              first_name:
                type: string
                example: example
              last_name:
                type: string
                example: example
              date_of_birth:
                type: string
                example: "2006-01-02 00:00:00 +0000 +0000"
              bio:
                type: string
                example: "Student of Science, learning, un-learning, relearning"
              avatar_url:
                type: string
                example: "https://example.com/avatar/profile.jpg"
              address:
                type: string
                example: example
              contact_number:
                type: string
                example: +9876543210
              user_status:
                type: string
                example: active
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: Description for Header1
        - in: header
          name: email
          type: string
          required: true
          description: Description for Header2
              
      tags:
        - User

    patch:
      operationId: UserService.updateProfile
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              username:
                type: string
                example: zB2zfb0zPL0t
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: Bearer token for authorization
        - in: header
          name: email
          type: string
          required: true
          description: User's email
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
                example: First
              last_name:
                type: string
                example: Last
              date_of_birth:
                type: string
                example: "2001-01-26"
              bio:
                type: string
                example: Full Name, an American fashion designer, was born on February 12, 1964, in Detroit, Michigan.
              address:
                type: string
                example: Detroit, Michigan
              contact_number:
                type: string
                example: 0987654321
              twitter:
                type: string
                example: username
              instagram:
                type: string
                example: username
              linkedin:
                type: string
                example: username
              github:
                type: string
                example: username
      tags:
        - User
    delete:
      operationId: UserService.deleteProfile
      responses:
        '200':
          description: A successful response.
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: Bearer token for authorization
        - in: header
          name: ip
          type: string
          required: true
          description: Ip address of the user
        - in: header
          name: client
          type: string
          required: true
          description: Ip address of the user
      tags:
        - User
      
  /user/topics:
    get:
      operationId: UserService.getTopics
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              topics:
                type: array
                items:
                  type: object
                  properties:
                    topic:
                      type: string
                      example: Reading
                    category:
                      type: string
                      example: Hobbies
        default:
          description: An unexpected error response.
          schema: {}
      tags:
        - Topics
        
  /user/categories:
    get:
      summary: List all categories
      description: Retrieves a list of all top-level categories in the knowledge base.
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              category:
                type: object
                properties:
                  Art:
                    type: object
                    properties:
                      Topics:
                        type: array
                        items:
                          type: string
                          example:
                            - Drawing
                            - Generative Art
                            - Portraits
                            - Comics
                            - Painting
                            - Illustration
                            - Fine Art
                            - Street Art
                            - Contemporary Art
                  "Artificial Intelligence":
                    type: object
                    properties:
                      Topics:
                        type: array
                        items:
                          type: string
                          example:
                            - Machine Learning
                            - ChatGPT
                            - Deep Learning
                            - Large Language Models
                            - NLP
                            - Voice Assistant
                            - Conversational AI
                  Arts:
                    type: object
                    properties:
                      Topics:
                        type: array
                        items:
                          type: string
                          example:
                            - Painting
                            - Design
                            - Dancing
                  Beauty:
                    type: object
                    properties:
                      Topics:
                        type: array
                        items:
                          type: string
                          example:
                            - Makeup
                            - Hair
                            - Skincare
                            - Beauty Tips
                            - Body Image
                  Blockchain:
                    type: object
                    properties:
                      Topics:
                        type: array
                        items:
                          type: string
                          example:
                            - Ethereum
                            - Decentralized Finance
                            - Web3
                            - Cryptocurrency
                            - Bitcoin
                            - Nft

      tags:
        - Topics
                   
  