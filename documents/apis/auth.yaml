swagger: '2.0'
info:
  title: The Monkeys
  version: 0.0.1
tags:
  - name: Authentication
consumes:
  - application/json
produces:
  - application/json
paths:
  /auth/register:
    post:
      operationId: AuthService.register
      responses:
        '201':
          description: A successful response.
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.VlLhbI_kSO75W7Gi.4-VlLhbI_kSO75W7Gi-4GhUcNrqwKLIEukNDI"
              userId:
                type: integer
                example: 144
              userName:
                type: string
                example: coffeewithdave
              first_name:
                type: string
                example: "Dave"
              last_name:
                type: string
                example: "August"
              email:
                type: string
                example: "email@example.com"
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              first_name:
                type: string
                example: "Dave"
              last_name:
                type: string
                example: "Aug"
              email:
                type: string
                example: "email@example.com"
              password:
                type: string
                example: "ExamplePass"
              
      tags:
        - Register
  /auth/login:
    post:
      operationId: AuthService.login
      responses:
        '201':
          description: A successful response.
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.VlLhbI_kSO75W7Gi.4-VlLhbI_kSO75W7Gi-4GhUcNrqwKLIEukNDI"
              userId:
                type: integer
                example: 144
              userName:
                type: string
                example: coffeewithdave
              first_name:
                type: string
                example: "Dave"
              last_name:
                type: string
                example: "August"
              email:
                type: string
                example: "email@example.com"
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: "email@example.com"
              password:
                type: string
                example: "ExamplePass"
              
      tags:
        - Login
  /auth/forgot-pass:
    post:
      operationId: AuthService.ForgetPass
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: "email@example.com"
      tags:
        - Forget Password
  /auth/is-authenticated:
    post:
      operationId: AuthService.UserAuthenticated
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              schema: {}
        default:
          description: An unexpected error response.
          schema: {}
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
          description: Description for Header1
        - in: header
          name: user
          type: string
          required: true
          description: Description for Header2
      tags:
        - Is User authenticated

definitions: {}