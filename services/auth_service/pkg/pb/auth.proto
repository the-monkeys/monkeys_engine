syntax = "proto3";

package auth;

option go_package = "./services/auth_service/pkg/pb";

message RegisterRequest {
  string firstName = 1;
  string lastName = 2;
  string email = 3;
  string password = 4;
  UserRole role = 5;
}

message RegisterResponse {
  int64 status = 1;
  string error = 2;
  string token = 3;
}

enum UserRole {
  USER_ADMIN = 0;
  USER_NORMAL = 1;
  USER_SUPPORT = 2;
  USER_SECURITY = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  int64 status = 1;
  string error = 2;
  string token = 3;
}

message ValidateRequest { 
  string token = 1; 
}

message ValidateResponse {
  int64 status = 1;
  string error = 2;
  int64 userId = 3;
  string user = 4;
}

message ForgotPasswordReq {
  string email = 1;
}

message ForgotPasswordRes {
  int64 status = 1;
  string error = 2;
  string token = 3;
}

message ResetPasswordReq {
  int64 id = 1;
  string token = 3;
}

message ResetPasswordRes {
  int64 status = 1;
  string error = 2;
  string token = 3;
}

message VerifyEmailReq {
  string email = 1;
  string token = 3;
}

message VerifyEmailRes {
  int64 status = 1;
  string error = 2;
  string token = 3;
}

message EmailVerificationReq {
  string email = 1;
}

message EmailVerificationRes {
  int64 status = 1;
  string error = 2;
  string message = 3;
}

message UpdatePasswordReq {
  string password = 1;
  string email = 2;
}

message UpdatePasswordRes {
  int64 status = 1;
  string error = 2;
  string message = 3;
}

service AuthService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc Validate(ValidateRequest) returns (ValidateResponse) {}
  rpc ForgotPassword(ForgotPasswordReq) returns (ForgotPasswordRes) {}
  rpc ResetPassword(ResetPasswordReq) returns (ResetPasswordRes) {}
  rpc VerifyEmail(VerifyEmailReq) returns (VerifyEmailRes) {}
  rpc RequestForEmailVerification(EmailVerificationReq) returns (EmailVerificationRes) {}
  rpc UpdatePassword(UpdatePasswordReq) returns (UpdatePasswordRes) {}
}